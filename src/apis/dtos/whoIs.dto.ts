import { z } from 'nestjs-zod/z'

export const whoIsSchema = z.object({
    createdDate: z.string(),
    updatedDate: z.string(),
    expiresDate: z.string(),
    registrant: z.object({
        organization: z.string().optional(),
        state: z.string().optional(),
        country: z.string().optional(),
        countryCode: z.string().optional(),
        rawText: z.string(),
    }),
    administrativeContact: z.object({
        organization: z.string().optional(),
        state: z.string().optional(),
        country: z.string().optional(),
        countryCode: z.string().optional(),
        rawText: z.string(),
    }),
    technicalContact: z.object({
        organization: z.string().optional(),
        state: z.string().optional(),
        country: z.string().optional(),
        countryCode: z.string().optional(),
        rawText: z.string(),
    }),
    domainName: z.string(),
    nameServers: z.object({
        rawText: z.string(),
        hostNames: z.array(z.string()),
        ips: z.array(z.string()),
    }),
    status: z.string(),
    rawText: z.string(),
    parseCode: z.number(),
    header: z.string(),
    strippedText: z.string(),
    footer: z.string(),
    audit: z.object({
        createdDate: z.string(),
        updatedDate: z.string(),
    }),
    registrarName: z.string(),
    registrarIANAID: z.string(),
    createdDateNormalized: z.string(),
    updatedDateNormalized: z.string(),
    expiresDateNormalized: z.string(),
    registryData: z.object({
        createdDate: z.string(),
        updatedDate: z.string(),
        expiresDate: z.string(),
        domainName: z.string(),
        nameServers: z.object({
            rawText: z.string(),
            hostNames: z.array(z.string()),
            ips: z.array(z.string()),
        }),
        status: z.string(),
        rawText: z.string(),
        parseCode: z.number(),
        header: z.string(),
        strippedText: z.string(),
        footer: z.string(),
        audit: z.object({
            createdDate: z.string(),
            updatedDate: z.string(),
        }),
        registrarName: z.string(),
        registrarIANAID: z.string(),
        createdDateNormalized: z.string(),
        updatedDateNormalized: z.string(),
        expiresDateNormalized: z.string(),
        whoisServer: z.string(),
    }),
    contactEmail: z.string(),
    domainNameExt: z.string(),
    estimatedDomainAge: z.number(),
})

export type whoIsDto = z.infer<typeof whoIsSchema>
